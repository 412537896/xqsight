#MODE
#The “mode” of operation. The default depends on the way the jar was built, but will usually be auto (meaning it tries
#to guess if it is an init script by checking if it is a symlink in a directory called init.d). You can explicitly set
#it to service so that the stop|start|status|restart commands work, or to run if you just want to run the script in the
#foreground.
MODE=service

#USE_START_STOP_DAEMON
#If the start-stop-daemon command, when it’s available, should be used to control the process. Defaults to true.

#PID_FOLDER
#The root name of the pid folder (/var/run by default).

#LOG_FOLDER
#The name of the folder to put log files in (/var/log by default).
LOG_FOLDER=/home/themis/logs

#LOG_FILENAME
#The name of the log file in the LOG_FOLDER (<appname>.log by default).

#APP_NAME
#The name of the app. If the jar is run from a symlink the script guesses the app name, but if it is not a symlink, or you want to explicitly set the app name this can be useful.

#RUN_ARGS
#The arguments to pass to the program (the Spring Boot app).

#JAVA_HOME
#The location of the java executable is discovered by using the PATH by default, but you can set it explicitly if there is an executable file at $JAVA_HOME/bin/java.

#JAVA_OPTS
#Options that are passed to the JVM when it is launched.
JAVA_OPTS="\
-Dserver.port=${server.port} \
-Dserver.servlet-path=/ \
-Dserver.jetty.uri-encoding=UTF-8 \
-Dspring.jmx.enabled=false \
#-Dspring.rabbitmq.addresses=${rabbitmq.addresses} \
#-Dspring.rabbitmq.username=themis \
#-Dspring.rabbitmq.password=themis \
#-Dspring.rabbitmq.listener.prefetch=10 \
#-Dspring.rabbitmq.listener.acknowledge-mode=NONE \
-Ddisconf.enable.remote.conf=true \
#-Ddisconf.conf_server_host=${disconf.conf_server_host} \
#-Ddisconf.version=1.0.0 \
#-Ddisconf.app=themis \
#-Ddisconf.env=${disconf.env} \
#-Ddisconf.conf_server_url_retry_times=1 \
#-Ddisconf.conf_server_url_retry_sleep_seconds=1 \
#-Ddisconf.user_define_download_dir=./disconf \
#-Djsse.enableSNIExtension=false "

#JARFILE
#The explicit location of the jar file, in case the script is being used to launch a jar that it is not actually embedded in.

#DEBUG
#if not empty will set the -x flag on the shell process, making it easy to see the logic in the script.